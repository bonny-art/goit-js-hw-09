{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAiBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAI,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEhDG,EAAE,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEhDA,E,IAxBMS,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAwBC,GACtBA,EAAEC,iBAGF,IAFA,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxChB,EAAwBc,EAAxBd,MAAOiB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAEZC,EAAI,EAAGA,EAAID,EAAOE,MAAOD,GAAK,EACrCrB,EAAcqB,EAAI,EAAGE,OAAOrB,EAAMoB,OAASC,OAAOJ,EAAKG,OAASD,GAC7DG,MAAK,SAAAC,G,OAAO3B,EAAA4B,OAAOC,QAAQF,E,IAC3BG,OAAM,SAAAC,G,OAAO/B,EAAA4B,OAAOI,QAAQD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', createPromices);\n\nfunction createPromices(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n\n  for (let i = 0; i < amount.value; i += 1) {\n    createPromise(i + 1, Number(delay.value) + Number(step.value) * i)\n      .then(val => Notify.success(val))\n      .catch(err => Notify.failure(err));\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","concat","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","i","value","Number","then","val","Notify","success","catch","err","failure"],"version":3,"file":"03-promises.2b02cf0c.js.map"}