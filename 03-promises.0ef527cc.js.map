{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAI,C,SAAEH,E,MAAUC,IAEhBG,EAAI,C,SAAEJ,E,MAAUC,GAAQ,GAEzBA,EAAM,G,CA5BAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAwBC,GACtBA,EAAEC,iBACF,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAAcC,SAEhD,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOI,MAAOD,GAAK,EACrCpB,EAAcoB,EAAI,EAAGE,OAAOP,EAAMM,OAASC,OAAON,EAAKK,OAASD,GAC7DG,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,KACjBJ,EAAA0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,SAAYwB,OAElE,EAAOzB,WAAUC,WAChBJ,EAAA0B,OAAMG,QAAC,sBAAS1B,QAA8BC,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', createPromices);\n\nfunction createPromices(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n\n  for (let i = 0; i < amount.value; i += 1) {\n    createPromise(i + 1, Number(delay.value) + Number(step.value) * i)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","step","amount","currentTarget","elements","i","value","Number","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.0ef527cc.js.map"}