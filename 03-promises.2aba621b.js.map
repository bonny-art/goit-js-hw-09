{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAiBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAI,uBAAqBH,QAAiBC,OAExCG,EAAE,sBAAoBJ,QAAeC,MAAU,GAElDA,EAAM,G,CAxBAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAwBC,GACtBA,EAAEC,iBACF,MAAMZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,GAAWH,EAAEI,cAAcC,SAEhD,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOI,MAAOD,GAAK,EACrCnB,EAAcmB,EAAI,EAAGE,OAAOnB,EAAMkB,OAASC,OAAON,EAAKK,OAASD,GAC7DG,MAAKC,GAAOzB,EAAA0B,OAAOC,QAAQF,KAC3BG,OAAMC,GAAO7B,EAAA0B,OAAOI,QAAQD,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', createPromices);\n\nfunction createPromices(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n\n  for (let i = 0; i < amount.value; i += 1) {\n    createPromise(i + 1, Number(delay.value) + Number(step.value) * i)\n      .then(val => Notify.success(val))\n      .catch(err => Notify.failure(err));\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","step","amount","currentTarget","elements","i","value","Number","then","val","Notify","success","catch","err","failure"],"version":3,"file":"03-promises.2aba621b.js.map"}